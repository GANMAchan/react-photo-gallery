{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/SearchBox/SearchBox.js","components/Photo/Photo.js","components/PhotoList/PhotoList.js","components/Gallery/Gallery.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","setState","react_default","a","createElement","reactstrap_es","fixed","color","dark","href","className","onClick","isOpen","navbar","React","Component","Home","_ref","onRouteChange","SearchBox","onChange","e","keyword","target","value","onKeyPress","key","search","_this2","type","name","placeholder","addonType","fa","Photo","photo","top","width","height","src","webformatURL","url","pageURL","window","open","user","PhotoList","photos","map","id","md","components_Photo_Photo","renderPhoto","Gallery","toLowerCase","fetch","method","then","response","json","data","hits","catch","console","log","size","offset","components_SearchBox_SearchBox","components_PhotoList_PhotoList","Footer","Date","getFullYear","App","route","components_Header_Header","components_Gallery_Gallery","components_Home_Home","components_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.714ee8fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container } from 'reactstrap';\r\n\r\nclass Header extends React.Component{\r\n\r\n  //ヘッダー右のハンバーガーメニューを初期化\r\n  constructor(props){\r\n    super(props);\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed:true\r\n    };\r\n  }\r\n\r\n  //ハンバーガーメニューの状態を反転する関数\r\n  toggleNavbar(){\r\n    this.setState({\r\n      collapsed:!this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Navbar fixed=\"top\" color=\"dark\" dark>\r\n         <Container>\r\n          <NavbarBrand href=\"https://koramen.github.io/react-photo-gallery/\" className=\"mr-auto\">Photo Gallery</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <NavLink href=\"\">Twitter</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"\">GitHub</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n         </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Button, Container } from 'reactstrap';\r\nimport './Home.css';\r\n\r\nconst Home = ({onRouteChange}) =>{\r\n    return(\r\n    <div className=\"home\">\r\n     <Container className=\"text-center text-white\">\r\n      <h1>テスト</h1>\r\n      <p>ああああああああああああああ</p>\r\n      <Button\r\n         color=\"default\"\r\n         className=\"mt-5 btn-ghost btn-white\"\r\n         onClick={() =>onRouteChange(\"gallery\")}>\r\n      More Detail\r\n      </Button>\r\n     </Container>\r\n    </div>\r\n   );\r\n }\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap';\r\nimport {FaSearch} from 'react-icons/fa';\r\n\r\n\r\nclass SearchBox extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {keyword:\"\"}\r\n  }\r\n\r\n  onChange = (e) =>{\r\n    this.setState({keyword:e.target.value});\r\n  }\r\n\r\n  onKeyPress = (e) =>{\r\n    if(e.key ===\"Enter\"){\r\n      this.props.search(this.state.keyword);\r\n    }\r\n  }\r\n\r\n  onClick = () =>{\r\n    this.props.search(this.state.keyword);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <InputGroup>\r\n        <Input type=\"search\" name=\"search\" placeholder=\"Enter Keyword!\"\r\n          onChange={(e) => this.onChange(e)}\r\n          onKeyPress={(e)=>this.onKeyPress(e)}>\r\n        </Input>\r\n        <InputGroupAddon addonType=\"append\">\r\n          <Button color=\"dark\" onClick={()=>this.onClick()}>\r\n           <FaSearch />\r\n          </Button>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardBody, CardText } from 'reactstrap';\r\nimport './Photo.css';\r\n\r\nconst Photo = ({photo}) => {\r\n\r\n  const onClick = (url) =>{\r\n      window.open(url, '_blank');\r\n  }\r\n\r\n  return (\r\n    <Card className=\"mb-3 text-center\">\r\n      <CardImg\r\n        top width=\"250px\"\r\n        height=\"250px\"\r\n        src={photo.webformatURL}\r\n        onClick={() => onClick(photo.pageURL)} />\r\n      <CardBody>\r\n        <CardText>{photo.user}</CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport Photo from '../Photo/Photo.js';\r\n\r\nconst PhotoList = ({photos}) =>  {\r\n\r\n  const renderPhoto = (photo) =>{\r\n    return <Col key = {photo.id} md=\"4\"><Photo photo={photo} /></Col>;\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n    {\r\n      photos.map((photo) =>{\r\n        return renderPhoto(photo);\r\n      })\r\n    }\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport SearchBox from '../SearchBox/SearchBox.js';\r\nimport PhotoList from '../PhotoList/PhotoList.js';\r\nimport './Gallery.css';\r\n\r\nclass Gallery extends Component{\r\n  render(){\r\n    return(\r\n      <Container className=\"gallery-container\">\r\n        <Row className=\"mb-5\">\r\n          <Col md={{size:6,offset:3}}>\r\n            <SearchBox search={this.search}/>\r\n          </Col>\r\n        </Row>\r\n        <PhotoList photos={this.state.photos}/>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {photos:[]}\r\n    }\r\n\r\n    componentWillMount(){\r\n      this.search(\"\");\r\n    }\r\n\r\n  search = (keyword) =>{\r\n    const param = {method:\"GET\"};\r\n    const url = \"https://pixabay.com/api/?key=\" + process.env.REACT_APP_API_KEY\r\n      + \"&q=\" + keyword.toLowerCase()\r\n      + \"&image_type=photo\"\r\n      + \"&min_width=200&min_height=200\";\r\n    fetch(url,param)\r\n      .then(response => response.json())\r\n      .then(data =>{\r\n        this.setState({photos:data.hits});\r\n      })\r\n      .catch(console.log);\r\n  }\r\n}\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n\r\n  const getYear = () => {\r\n    return new Date().getFullYear();\r\n  }\r\n\r\n  return(\r\n    <footer id=\"Footer\" className=\"pt-3 text-center\">\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"small\">\r\n              Photo Gallery created by men, Copyright &copy; {getYear()}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header.js'\nimport Home from './components/Home/Home.js';\nimport Gallery from './components/Gallery/Gallery.js';\nimport Footer from './components/Footer/Footer.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        {this.state.route === \"gallery\" ?\n          <Gallery /> :\n          <Home onRouteChange={this.onRouteChange}/>\n        }\n        <Footer />\n      </div>\n    );\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {route:\"home\"};\n  }\n\n  onRouteChange = (route)  =>{\n    this.setState({route:route});\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}